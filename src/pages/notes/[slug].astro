---
import Note from '@components/Note.astro'
import WebMentions from '@components/WebMentions.astro'
import Layout from '@layouts/Base.astro'
import { fetchArticles } from '@utils/api.js'
import {
  getAllMentions,
  isForUrl,
  sortMentions,
} from '@utils/mentions.js'
import { identifierToSlug } from '@utils/slugs.js'
import type { Article } from 'schema-dts'

export async function getStaticPaths() {
  const allNotes = await fetchArticles('notes')

  return allNotes.map(note => ({
    params: {
      slug: identifierToSlug(note.identifier!.toString()),
    },
    props: { note },
  }))
}

const { note } = Astro.props as { note: Article }

const url = new URL(Astro.url.pathname, Astro.site).toString()

const allMentions = await getAllMentions()
const webMentions = allMentions.children
  .filter(isForUrl(url))
  .sort(sortMentions(true))
---

<Layout title={note.name?.toString()} pathname={Astro.url.pathname}>
  <section>
    <Note note={note} syndicate />
  </section>
  <WebMentions webMentions={webMentions} url={url} />
</Layout>

<style lang="scss">
  section {
    padding-block: var(--spacer-lg);
    display: flex;
    flex-direction: column;
    align-items: center;
  }
</style>
